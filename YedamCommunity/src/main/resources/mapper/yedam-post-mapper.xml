<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.yedam_post.mapper.PostMapper">

	<!-- 게시글 등록 - PL/SQL - -->
    <insert id="insertPost" parameterType="Post" statementType="CALLABLE">
        <![CDATA[
    DECLARE
        v_post_id NUMBER;
        v_boardfile_id NUMBER;
    BEGIN
        SELECT post_id_seq.NEXTVAL 
        INTO v_post_id 
        FROM dual;

        INSERT INTO posts (post_id
                         , board_id
                         , user_id
                         , title
                         , post_content
                         , create_date
                         , writer
                         , post_view
                         , post_like
                         , update_date)
        VALUES (v_post_id
              , #{boardId}
              , #{userId}
              , #{title}
              , #{postContent}
              , SYSDATE
              , #{writer}
              , 0
              , 0
              , NULL);

        SELECT boardfile_id_seq.NEXTVAL 
        INTO v_boardfile_id 
        FROM dual;

        INSERT INTO boardfiles (boardfile_id
                              , board_id
                              , post_id
                              , boardfile_name
                              , boardfile_size
                              , boardfile_location
                              , boardfile_ext)
        VALUES (v_boardfile_id
              , #{boardId}
              , v_post_id
              , #{boardfileName, jdbcType=VARCHAR}
              , #{boardfileSize, jdbcType=BIGINT}
              , #{boardfileLocation, jdbcType=VARCHAR}
              , #{boardfileExt, jdbcType=VARCHAR});
    END;
    ]]>
    </insert>

	<!-- 게시글 단건조회  수정 필요 -->
	<select id="getPostDetails" parameterType="int" resultType="Post">
		SELECT p.post_id
		     , p.title
		     , p.post_content
		     , p.create_date AS post_create_date
		     , p.writer AS post_writer
		     , p.post_view
		     , p.post_like
		     , p.update_date AS post_update_date
		     , b.boardfile_name
		FROM posts p LEFT JOIN boardfiles b 
		               ON p.post_id = b.post_id
		WHERE p.post_id = #{postId}
	</select>

	<!-- 게시글 전체 조회 -->
	<select id="getAllPosts" resultType="Post">
		SELECT POST_ID
	   	     , BOARD_ID
		     , USER_ID
		     , TITLE
		     , POST_CONTENT
		     , CREATE_DATE
		     , WRITER
		     , POST_VIEW
		     , POST_LIKE
		     , UPDATE_DATE
		FROM posts
		ORDER BY post_id DESC
	</select>

	<!-- 게시글 수정 -->
	<update id="updatePost" parameterType="Post">
		UPDATE posts
		SET title =	#{title}
		  , post_content = #{postContent}
		  , update_date = #{updateDate}
		WHERE post_id = #{postId}
	</update>

	<!-- 삭제 -->
	<delete id="deletePost1" parameterType="int">
		DELETE FROM comments
        WHERE reply_id IN (SELECT reply_id
                           FROM replies
                           WHERE post_id = #{postId})
	</delete>

	<delete id="deletePost2" parameterType="int">
		DELETE FROM replies
		WHERE
		post_id = #{postId}
	</delete>

	<delete id="deletePost3" parameterType="int">
		DELETE FROM boardfiles
		WHERE post_id = #{postId}
	</delete>

	<delete id="deletePost4" parameterType="int">
		DELETE FROM reports
		WHERE post_id = #{postId}
	</delete>
	
	<delete id="deletePost5" parameterType="int">
		DELETE FROM posts
		WHERE post_id = #{postId}
	</delete>
	
	<!-- 조회수 -->
	<update id="updatePostViewCNT" parameterType="Post">
		UPDATE posts
        SET    post_view = post_view + 1
        WHERE post_id = #{postId}
    </update>
    
    <!-- 추천수 -->
    <update id="updatePostLikeCNT" parameterType="Post">
    	UPDATE posts
		SET post_like = post_like + 1
		WHERE post_id = #{postId}
    </update>
    
 	<!-- 페이지네이션 -->
<!--	<select id="getPosts" resultType="Post">
        SELECT * 
        FROM (
            SELECT
                p.*,
                ROWNUM AS rnum
            FROM (
                SELECT *
                FROM posts
                ORDER BY post_id DESC
            ) p
            WHERE ROWNUM <= #{endRow}
        )
        WHERE rnum > #{startRow}
    </select>
    
    게시글 개수
    <select id="getPostCount" resultType="int">
        SELECT COUNT(*)
        FROM posts
    </select> -->

</mapper>