<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.yedam_examstudent.mapper.CbtStudentMapper">
	<!-- 전체시험목록 조회 -->
	<select id="selectTestListAll" resultType="TestVO">
		SELECT  a.test_id
       			,a.test_date
       			,a.test_name
       			,c.result_id
       			,c.result_score
       			,c.feedback
       			,c.is_reexam
       			,c.pass_score
		FROM    tests a 
		        JOIN test_targets b
		        ON(a.test_id = b.test_id)
     		    JOIN exam_results c
     		    ON(b.test_target_id = c.test_target_id)
		WHERE   b.user_id = #{userId}
		ORDER BY a.test_id
	</select>
	<!-- 시험상세정보 조회 -->
	<select id="selectTestDetail" resultType="TestVO">
		WITH b as (SELECT test_id
		                  ,subject_id             
                          ,COUNT(quiz_id) as quizIdCnt
                          ,SUM(quiz_score) as quizScore
                   FROM quizbox
                   GROUP BY test_id
                            ,subject_id)    
		SELECT  a.test_id
		        ,a.test_content
		        ,a.test_time
		        ,a.test_date
		        ,a.test_name
		        ,b.subject_id
		        ,c.curriculum_name
		        ,quizIdCnt
		        ,quizScore
		FROM    tests a 
		        JOIN  b  
		        ON(a.test_id = b.test_id)
		        JOIN curriculum c   
		        ON(a.curriculum_id = c.curriculum_id)
		WHERE   a.test_id = #{testId}
	</select>
	<!-- 시험문제 랜덤 -->
	<select id="selectTestQuizRand" resultType="QuizboxVO">
		SELECT  aa.*
		        ,ROWNUM as rn
        FROM    (SELECT  quiz_content
                         ,quiz_id
                         ,quiz_score
                         ,subject_id
                 FROM    quizbox
                 WHERE   test_id = #{testId}
                 ORDER BY DBMS_RANDOM.VALUE) aa
	</select>
	<!-- 시험시작정보 조회 = 시험명, 제한시간, 응시자 -->
	<select id="selectTestStart" resultType="TestVO">
		SELECT  DISTINCT a.test_id
		        ,a.test_time
		        ,a.test_name
		        ,b.subject_id
		FROM    tests a
				JOIN quizbox b
				ON(a.test_id = b.test_id)
		WHERE   a.test_id = #{testId}
	</select>
	<!-- 시험시작정보 조회 = 문제내용 -->
	<select id="selectTestQuiz1" resultType="QuizboxVO">
		SELECT  quiz_content
                ,quiz_id
                ,quiz_score
                ,subject_id
        FROM    quizbox
        WHERE   test_id = #{testId}
        AND     subject_id = #{subjectId}
        AND     quiz_id = #{quizId}
	</select>
	<!-- 시험시작정보 조회 = 문제보기 -->
	<select id="selectTestQuiz2" resultType="AnswerVO">
		SELECT  a.example_num
		        ,a.text_content
        FROM    answers a JOIN quizbox b
                ON(a.quiz_id = b.quiz_id)
        WHERE   a.subject_id = #{subjectId} 
        AND     b.test_id = #{testId} 
        AND     b.quiz_id = #{quizId}
        ORDER BY a.example_num
	</select>
	<!-- 시험문제 -->
	<select id="selectTestQuiz" resultType="TestVO">
		SELECT  b.quiz_id
       		    ,b.quiz_content
       		    ,b.quiz_score
       		    ,b.subject_id
       		    ,a.example_num
       		    ,a.text_content
		FROM    answers a JOIN quizbox b
		        ON(a.quiz_id = b.quiz_id)
		WHERE   a.subject_id = #{subjectId}
		AND     b.test_id = #{testId}
		AND     b.quiz_id = #{quizId}
		ORDER BY a.example_num
	</select>
	<!-- 문제개수 구하기 -->
	<select id="selectQuizCnt" resultType="int">
		SELECT  COUNT(quiz_id) as quizCnt
		FROM    quizbox
		WHERE   test_id = #{testId}
	</select>
	<!-- 시험 결과 정보 등록 - exam_results 테이블 -->
	<update id="insertTestResult" parameterType="ExamResultVO">
	<selectKey keyProperty="resultId" resultType="int" order="BEFORE">
		SELECT  result_id_seq.NEXTVAL
		FROM    DUAL
	</selectKey>
		DECLARE
			v_sub NUMBER(10); <!-- 과목번호 -->
    		v_target NUMBER(10); <!-- 시험대상자번호 -->
    		v_qscore NUMBER(10); <!-- 문제 배점 -->
    		v_rscore NUMBER(10); <!-- 시험 총점 -->
    		v_pscore NUMBER(10); <!-- 합격 점수 -->
		BEGIN
			<!-- 현재 시험의 기준점수, 대상자번호, 과목번호, 배점 가져오기 -->
			SELECT  DISTINCT a.pass_score, 
			        b.test_target_id, 
			        c.subject_id, 
			        quiz_score
			INTO    v_pscore, v_target, v_sub, v_qscore
			FROM    exam_results a JOIN test_targets b
					                 ON (a.test_target_id = b.test_target_id)
					               JOIN quizbox c 
					                 ON (b.test_id = c.test_id)
			WHERE   b.test_id = #{testId}
			AND     b.user_id = 8;
			<!-- 테이블에 시험결과 정보 등록하기 -->
			INSERT INTO exam_results(result_id
			                         ,result_score
			                         ,subject_id
			                         ,pass_score
			                         ,test_target_id)
			VALUES(#{resultId}
			       ,0
			       ,v_sub
			       ,v_pscore
			       ,v_target);
			COMMIT;
		END;
	</update>
	<!-- 문제 제출 답안 저장 - test_results 테이블 -->
	<update id="insertTestSubmit" parameterType="TestResultVO">
		DECLARE
    		v_answer NUMBER(10); <!-- 내 답안 -->
    		v_iscorrect NUMBER(10); <!-- 답안 정답 유무 -->
    		v_rid NUMBER(10); <!-- 시험결과식별번호 -->
		BEGIN
			<!-- 현재 문제의 원래 답안 가져오기 -->
    		SELECT  example_num
    		INTO    v_answer
    		FROM    answers
    		WHERE   quiz_id = #{quizId}
    		AND     example_answer = 1;
    		<!-- 시험결과식별번호 가져오기 -->
    		SELECT  result_id
    		INTO    v_rid
    		FROM    exam_results a
    				JOIN test_targets b
    				ON(a.test_target_id = b.test_target_id)
    		WHERE 	b.test_id = #{testId}
    		AND     b.user_id = 8;
    		<!-- 정답 유무 비교 -->
			IF v_answer = #{testAnswer} THEN
        		v_iscorrect := 1;
    		ELSE
        		v_iscorrect := 0;
    		END IF;
			<!-- 한 문제씩 제출 답안 저장하기 -->
    		INSERT INTO test_results(test_result_id
		                         	 ,test_answer
		                         	 ,quiz_id
		                         	 ,is_correct
		                         	 ,user_id
		                         	 ,result_id)
    		VALUES(test_result_id_seq.NEXTVAL
		    	   ,#{testAnswer}
		    	   ,#{quizId}
		    	   ,v_iscorrect
		    	   ,14
		    	   ,v_rid);
    		COMMIT;
    	END;
	</update>
	<!-- 시험 결과 정보 수정 - exam_results 테이블 -->
	<update id="insertTestResultScore" parameterType="ExamResultVO">
		DECLARE
			v_rscore NUMBER(10,0); <!-- 총점 -->
			v_pscore NUMBER(10,0); <!-- 합격점 -->
			v_rid NUMBER(10,0); <!-- 시험결과식별번호 -->
			v_isreexam NUMBER(10); <!-- 재시험유무 -->
		BEGIN
			<!-- 시험결과식별번호, 합격점 가져오기 -->
			SELECT  a.result_id, a.pass_score
			INTO   	v_rid, v_pscore
			FROM    exam_results a
					JOIN test_targets b
					ON(a.test_target_id = b.test_target_id)
			WHERE   b.test_id = #{testId}
			AND		b.user_id = 14			
			<!-- 총점 가져오기 -->
			SELECT  SUM(CASE WHEN is_correct = 1 THEN b.quiz_score
			                                     ELSE 0 
			                                     END) AS result_score
			INTO    v_rscore
			FROM    test_results a 
     				JOIN quizbox b 
     				ON(a.quiz_id = b.quizbox_id)
			where   a.result_id = v_rid;
			<!-- 재시험유무 확인 -->
			IF v_rscore >= v_pscore THEN
				v_isreexam := 1;
			ELSE
			    v_isreexam := 0;
			END IF;
			<!-- 총점 등록 -->
			UPDATE  exam_results
			SET	    result_score = v_rscore,
			        is_reexam = v_isreexam
			WHERE   result_id = v_rid;
			COMMIT;
		END;
	</update>
	<update id="insertTestResultScore2" parameterType="ExamResultVO">
		DECLARE
			v_iscorrect NUMBER(10); <!-- 정답 유무 -->
			v_isreexam NUMBER(10); <!-- 재시험 유무 -->
			v_rscore1 NUMBER(10); <!-- 시험 총점 -->
			v_rscore2 NUMBER(10); <!-- 바뀐 총점 -->
			v_pscore NUMBER(10); <!-- 기준 점수 -->
			v_qscore NUMBER(10); <!-- 문제 배점 -->
		BEGIN
			<!-- 현재 문제 배점 가져오기 -->
			SELECT  quiz_score
			INTO    v_qscore
			FROM    quizbox
			WHERE   quiz_id = #{quizId}
			AND     test_id = #{testId};
			
			<!-- 현재 시험 총점, 기준점수 가져오기 -->
			SELECT  a.result_score, a.pass_score
			INTO    v_rscore1, v_pscore
			FROM    exam_results a JOIN test_targets b
					ON(a.test_target_id = b.test_target_id)
			WHERE   b.test_id = #{testId}
			AND     b.user_id = 8;
			
			<!-- 현재 문제 정답 유무 가져오기 -->
			SELECT  a.is_correct
			INTO    v_iscorrect
			FROM    test_results a JOIN test_targets b
					ON(a.user_id = b.user_id)
			WHERE   b.test_id = #{testId}
			AND     a.quiz_id = #{quizId};
			
			<!-- 현재 문제 답안 비교해서 총점 누적 값 수정하기 -->
    		IF v_iscorrect = 1 THEN
        		v_rscore1 := v_rscore1 + v_qscore;
        		UPDATE exam_results
        		SET    result_score = v_rscore1
        		WHERE  test_target_id = 2;
        		COMMIT;
    		END IF;
    		
    		<!-- 바뀐 시험 총점 가져오기 -->
			SELECT  a.result_score
			INTO    v_rscore2
			FROM    exam_results a JOIN test_targets b
					ON(a.test_target_id = b.test_target_id)
			WHERE   b.test_id = #{testId}
			AND     b.user_id = 8;
			
    		<!-- 재시험 유무 비교하기 -->
    		IF v_rscore2 >= v_pscore THEN
    			v_isreexam := 1;
        	ELSE
        		v_isreexam := 0;
    		END IF;
    		<!-- 재시험 유무 저장하기 -->
    		UPDATE exam_results
        	SET    is_reexam = v_isreexam
        	WHERE  test_target_id = 2;
        	COMMIT;
		END;
	</update>
	<!-- 시험결과 정보 -->
	<select id="selectTestResult" resultType="ExamResultVO">
		SELECT  c.name
       			,a.subject_id
       			,a.result_score
       			,a.is_reexam
		FROM    exam_results a JOIN test_targets b 
				ON(a.test_target_id = b.test_target_id)
				JOIN users c 
				ON(b.user_id = c.user_id)
		WHERE   b.user_id = 8
		AND     b.test_id = #{testId}
	</select>
</mapper>