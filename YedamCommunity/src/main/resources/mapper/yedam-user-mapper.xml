<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.yedam_user.mapper.UserMapper">
	
	<!-- Spring Security용 유저 찾기 -->
	<select id="getByUserId" resultType="UserVO">
		SELECT * 
		FROM users
		WHERE id = #{id}
	</select>
	
	<!-- 로그인 -->
	<select id="userLogin" resultType="UserVO">
		SELECT *
		FROM users
		WHERE id = #{id}
		AND password = #{password}
	</select>
	
	<!-- 아이디찾기 -->
	<select id="getUserId" resultType="UserVO">
		SELECT *
		FROM users
		WHERE name = #{name}
		AND email = #{email}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="getUserPw" parameterType="UserVO">
		SELECT password
		FROM users
		WHERE id = #{id}
		AND name = #{name}
		AND email = #{email}
	</select>
	
	<!-- 회원가입 신청 거절(삭제) -->
	<delete id="refuseUser" parameterType="int">
		DELETE register
		WHERE register_id = #{registerId}
	</delete>
	
	<!-- 유저 삭제 -->
	<delete id="removeUser" parameterType="int">
		DELETE users
		WHERE user_id = #{userId}
	</delete>
	
	<!-- 회원가입 신청 -->
	<insert id="requestUser" parameterType="RegisterVO">
		INSERT INTO register (
			register_id
			, id
			, password
			, name
			, email
			, tel
			, address
			, company_info
			, user_type
			, curriculum_id
			, profile_image_name
			, profile_image_size
			, profile_image_location
			, download_location
			, profile_image_ext
		) VALUES (
			user_id_seq.NEXTVAL
			, #{id}
			, #{password}
			, #{name}
			, #{email}
			, #{tel}
			, #{address}
			, #{companyInfo}
			, #{userType}
			, #{curriculumId}
			, #{profileImageName}
			, #{profileImageSize}
			, #{profileImageLocation}
			, #{downloadLocation}
			, #{profileImageExt}
		)
	</insert>
	
	<!-- 관리자페이지 첫 페이지(회원가입 신청한 유저) -->
	<select id="selectStdList" resultType="RegisterVO">
		SELECT register_id
			 , user_type
			 , name
			 , tel
			 , email
		FROM register
		WHERE user_type = 'ROLE_GRAD' OR user_type = 'ROLE_LEARN'
		ORDER BY register_id
	</select>
	
	<!-- 관리자페이지 유저 리스트 출력 및 필터링 -->
	<select id="getUsersByFilter" parameterType="map" resultType="UserVO">
		<!-- SELECT * FROM users
		<where>
			<choose>
				<when test="filter == 'showAll'">
					user_type = 'ROLE_GRAD' OR user_type = 'ROLE_LEARN'
				</when>
				<when test="filter == 'showGrad'">
					user_type = 'ROLE_GRAD'
				</when>
				<when test="filter == 'showLearn'">
					user_type = 'ROLE_LEARN'
				</when>
				<otherwise>
					1=1
				</otherwise>
			</choose>
		</where>
		ORDER BY user_id -->
		
		SELECT * 
		FROM (SELECT /*+ INDEX_DESC(b PK_GOODS) */ rownum rn, b.*
      		  FROM users b
			  <where>
				 <choose>
					<when test="filter == 'showAll'">
						<![CDATA[
					    rownum <= (#{page} * 5)
					    ]]>
						AND (user_type = 'ROLE_GRAD' OR user_type = 'ROLE_LEARN')
					</when>
					<when test="filter == 'showGrad'">
						<![CDATA[
					    rownum <= (#{page} * 5)
					    ]]>
						AND user_type = 'ROLE_GRAD'
					</when>
					<when test="filter == 'showLearn'">
						<![CDATA[
					    rownum <= (#{page} * 5)
					    ]]>
						AND user_type = 'ROLE_LEARN'
					</when>
					<otherwise>
						<![CDATA[
					    rownum <= (#{page} * 5)
					    ]]>
						AND 1=1
					</otherwise>
				 </choose>
			  </where>
			  ) a
		WHERE a.rn > (#{page} - 1) * 5
	</select>
	
	<select id="getTotalCnt" resultType="int">
		SELECT COUNT(*)
        FROM users
        <where>
            <choose>
                <when test="filter == 'showAll'">
                    AND (user_type = 'ROLE_GRAD' OR user_type = 'ROLE_LEARN')
                </when>
                <when test="filter == 'showGrad'">
                    AND user_type = 'ROLE_GRAD'
                </when>
                <when test="filter == 'showLearn'">
                    AND user_type = 'ROLE_LEARN'
                </when>
            </choose>
        </where>
	</select>
	
	<update id="insertUser" parameterType="UserVO">
	    BEGIN
	        INSERT INTO users (
	            user_id
	            , id
	            , password
	            , name
	            , tel
	            , email
	            , address
	            , company_info
	            , user_type
	            , curriculum_id
	            , profile_image_name
				, profile_image_size
				, profile_image_location
				, download_location
				, profile_image_ext
	        )
	        SELECT user_id_seq.NEXTVAL
	            , id
	            , password
	            , name
	            , tel
	            , email
	            , address
	            , company_info
	            , user_type
	            , curriculum_id
	            , profile_image_name
				, profile_image_size
				, profile_image_location
				, download_location
				, profile_image_ext
	        FROM register
	        WHERE register_id = #{registerId};
	
	        DELETE FROM register
	        WHERE register_id = #{registerId};
	    END;
	</update>
	
	<update id="insertCheckedUsers" parameterType="java.util.Map">
	    BEGIN
	        FOR i IN (SELECT register_id 
	                , id
	                , password
	                , name
	                , tel
	                , email
	                , address
	                , company_info
	                , user_type
	                , curriculum_id
	                FROM register
	                WHERE register_id IN
	                <foreach item="registerId" collection="registerIds" open="(" separator="," close=")">
	                    #{registerId}
	                </foreach>
	                )
	        LOOP
	            INSERT INTO users (user_id
	                             , id
	                             , password
	                             , name
	                             , tel
	                             , email
	                             , address
	                             <!-- , user_image -->
	                             , company_info
	                             , user_type
	                             , curriculum_id
	                             )
	            VALUES (user_id_seq.NEXTVAL
	                  , i.id
	                  , i.password
	                  , i.name
	                  , i.tel
	                  , i.email
	                  , i.address
	                  <!-- , i.user_image -->
	                  , i.company_info
	                  , i.user_type
	                  , i.curriculum_id
	            );
	            
	            DELETE FROM register
	            WHERE register_id = i.register_id;
	        END LOOP;
	    END;
	</update>



</mapper>