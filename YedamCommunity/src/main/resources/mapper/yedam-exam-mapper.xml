<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.yedam_examteacher.mapper.ExamMapper">
	<!-- 시험목록 조회 -->
	<select id="selectExamAll" resultType="TeacherVO">
		SELECT test_id,
		       test_name,
		       test_date,
		       test_time
		FROM tests
		ORDER BY test_id       
	</select>
	<!-- 시험 등록 -->
	<insert id="insertTest" parameterType="TeacherVO">
		INSERT INTO tests (test_id
						  , curriculum_id
						  , test_content
						  , test_time
						  , test_date
						  , test_name
						  , class_id)
		VALUES (test_id_seq.nextval
				, #{curriculumId}
				, #{testContent}
				, #{testTime}
				, #{testDate}
				, #{testName}
				, #{classId})				  
	</insert>
	
	<select id="selectUserAll" resultType="TeacherVO">
	<!-- 유저 정보 출력(시험 대상자) -->
		SELECT user_id
		     , name
		     , tel
		     , email
		     , address
		     , user_image
		     , company_info
		     , user_type
		     , curriculum_id
		FROM users
		WHERE curriculum_id = #{curriculumId}
	</select>
	<!-- 문제 등록 -->
	<insert id="insertQuiz" parameterType="TeacherVO">
		INSERT INTO quizes (quiz_id
			  			  , subject_id
						  , quiz_content
						  , quiz_solution)
		VALUES (quiz_id_seq.nextval
			  , #{subjectId}
			  , #{quizContent}
			  , #{quizSolution})
	</insert>
	
	<insert id="insertQuizJu" parameterType="TeacherVO">
		INSERT INTO quizes (quiz_id
			  			  , subject_id
						  , quiz_content
						  , quiz_solution)
		VALUES (quiz_id_seq.nextval
			  , #{subjectId}
			  , #{quizContentJu}
			  , #{quizSolutionJu})
	</insert>
	
	
	<!-- 문제 지문 등록 -->
	<insert id="insertAnswer" parameterType="TeacherVO">
		INSERT INTO answers (text_id
			  			  , example_num
						  , text_content
						  , quiz_id
						  , subject_id)
		VALUES (text_id_seq.nextval
			  , 1
			  , #{textContent}
			  , quiz_id_seq.currval
			  , #{subjectId})
	</insert>
	<insert id="insertAnswer2" parameterType="TeacherVO">
		INSERT INTO answers (text_id
			  			  , example_num
						  , text_content
						  , quiz_id
						  , subject_id)
		VALUES (text_id_seq.nextval
			  , 2
			  , #{textContent2}
			  , quiz_id_seq.currval
			  , #{subjectId})
	</insert>
	<insert id="insertAnswer3" parameterType="TeacherVO">
		INSERT INTO answers (text_id
			  			  , example_num
						  , text_content
						  , quiz_id
						  , subject_id)
		VALUES (text_id_seq.nextval
			  , 3
			  , #{textContent3}
			  , quiz_id_seq.currval
			  , #{subjectId})
	</insert>
	<insert id="insertAnswer4" parameterType="TeacherVO">
		INSERT INTO answers (text_id
			  			  , example_num
						  , text_content
						  , quiz_id
						  , subject_id)
		VALUES (text_id_seq.nextval
			  , 4
			  , #{textContent4}
			  , quiz_id_seq.currval
			  , #{subjectId})
	</insert>
	<insert id="insertAnswer5" parameterType="TeacherVO">
		INSERT INTO answers (text_id
			  			  , example_num
						  , text_content
						  , quiz_id
						  , subject_id)
		VALUES (text_id_seq.nextval
			  , 5
			  , #{textContent5}
			  , quiz_id_seq.currval
			  , #{subjectId})
	</insert>
	<insert id="insertAnswerJu" parameterType="TeacherVO">
		INSERT INTO answers (text_id
			  			  , example_num
						  , text_content
						  , quiz_id
						  , subject_id)
		VALUES (text_id_seq.nextval
			  , 1
			  , #{textContentJu}
			  , quiz_id_seq.currval
			  , #{subjectId})
	</insert>
	<!-- 문제저장소에 문제 출력 -->
	<!-- <select id="selectQuizAll" resultType="TeacherVO">
		SELECT q.quiz_id
       		 , s.subject_name
       		 , q.quiz_content
       		 , q.quiz_solution
       		 , q.user_id
       		 , q.quiz_answer
       		 , s.subject_id
		FROM quizes q JOIN subjects s 
                        ON q.subject_id = s.subject_id
        <if test="sName != null and !sName.equals('') and sName != 'all' ">
        WHERE subject_name = #{sName}
        </if>        
		ORDER BY quiz_id
	</select> -->
	
	<select id="filterQuiz" resultType="TeacherVO" parameterType="String">
		SELECT q.quiz_id
       		 , s.subject_name
       		 , q.quiz_content
       		 , q.quiz_solution
       		 , q.user_id
       		 , q.quiz_answer
       		 , s.subject_id
		FROM quizes q JOIN subjects s 
                        ON q.subject_id = s.subject_id
        <if test="sName != null and !sName.equals('') and !sName.equals('all') ">
        WHERE subject_name = #{sName}
        </if>        
		ORDER BY quiz_id
	</select>
	
	<!-- 문제저장소에 지문 출력 -->
	<select id="selectAnswerAll" resultType="TeacherVO">
		SELECT example_num||'. '||text_content as text_content
		FROM answers
		WHERE quiz_id = #{quizId}
		ORDER BY example_num      
	</select>
	
	<select id="quizAnswer" resultType="TeacherVO" parameterType="int">
		SELECT example_num||'. '||text_content as text_content
		FROM answers
		WHERE quiz_id = #{qId}
		ORDER BY example_num    
	</select>
	
	<!-- 문제 단건조회 -->
	<select id="selectQuiz" resultType="TeacherVO">
		SELECT quiz_id
		      , quiz_content
		      , quiz_solution
		FROM quizes
		WHERE quiz_id = #{quizId}
	</select>
	
	<select id="infoQuiz" resultType="TeacherVO" parameterType="int">
		SELECT quiz_id
		      , quiz_content
		      , quiz_solution
		FROM quizes
		WHERE quiz_id = #{qId}
	</select>
	
	<!-- 과목명 출력 -->
	<select id="selectSubjectAll" resultType="TeacherVO">
		SELECT DISTINCT subject_name
		FROM subjects
		ORDER BY subject_name
	</select>
	
	<!-- 과목명 추가 -->
	<insert id="insertSubject" parameterType="TeacherVO">
		INSERT INTO subjects(subject_id
						   , subject_name)
		VALUES (subject_id_seq.nextval
        		, #{subjectName})
	</insert>
	
	<!-- 과목명 삭제 -->
	<delete id="deleteSubject">
		DELETE FROM subjects
		WHERE subject_id = #{subjectId}
	</delete>
</mapper>	